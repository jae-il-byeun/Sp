<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="kr.kh.project.dao.BoardDAO">
 	<resultMap type="kr.kh.project.vo.BoardVO" id="Board">
 		<id property="bo_num" column="bo_num" />
		<result  property="bo_name" column="bo_name" />
		<result  property="bo_content" column="bo_content" />
		<result  property="bo_record_date" column="bo_record_date" />
		<result  property="bo_update_date" column="bo_update_date" />
		<result  property="bo_views" column="bo_views" />
		<result  property="bo_up" column="bo_up" />
		<result  property="bo_down" column="bo_down" />
		<result  property="bo_bt_num" column="bo_bt_num" />
		<result  property="bo_me_num" column="bo_me_num" />
		<result  property="bo_bi_num" column="bo_bi_num" />
<!-- 		<collection property="fileList" ofType="kr.kh.project.vo.FileVO" column="bo_num" select="selectFileList"/> -->
		<collection property="type" ofType="kr.kh.project.vo.BoardTypeVO" column="bo_bt_num" select="selectBoardList"/>
	</resultMap>

	<select id="selectAllBoardType" resultType="kr.kh.project.vo.BoardTypeVO">
		<![CDATA[
			select * from boardType 
		]]>
	</select>
	<select id="selectChooseBoardType" resultType="kr.kh.project.vo.BoardTypeVO">
		select * from boardType where bt_writer_authority BETWEEN #{bs_au}+2 AND #{bs_au}+4
	</select>
	
<!-- 	list -->
	<select id="selectBoardList"  resultType="kr.kh.project.vo.BoardVO">
		select * from board where (bo_name like concat('%',#{cri.search},'%') or bo_content like concat('%',#{cri.search},'%'))
		<if test="cri.type != 0">
			AND bo_bt_num = #{cri.type}
		</if>
		order by bo_num desc, bo_bt_num asc limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<select id="selectBoardTotalCount" resultType="int">
  		select count(*) from board
  			where
  				(bo_name like concat('%',#{cri.search} ,'%')
  				or bo_content like concat('%',#{cri.search} ,'%'))
  				<if test="cri.type != 0">
  					and bo_bt_num = #{cri.type}  				
  				</if>
  	</select>
  	
	<select id="selectBoardType" resultType="kr.kh.project.vo.BoardTypeVO">
		select * from boardType where bt_num = #{btn}
	</select>
	<select id="selectBoardListType" resultType="kr.kh.project.vo.BoardTypeVO">
		select * from boardType 
	</select>
<!-- 	BoardInsert -->
	<insert id="userInsertBoard" useGeneratedKeys="true" keyProperty = "bo.bo_num">
		insert into board (bo_num, bo_name, bo_content, bo_record_date, bo_views, bo_me_id, bo_bt_num)
		select ifnull(max(bo_num),0)+1, #{bo.bo_name}, #{bo.bo_content},now(), 0, #{bo.bo_me_id}, #{bo.bo_bt_num}
			from board
	 </insert>
	 <insert id="sellerInsertBoard" useGeneratedKeys="true" keyProperty = "bo.bo_num">
		insert into board (bo_num, bo_name, bo_content, bo_record_date, bo_views, bo_bi_id, bo_bt_num)
		select ifnull(max(bo_num),0)+1, #{bo.bo_name}, #{bo.bo_content},now(), 0, #{bo.bo_bi_id}, #{bo.bo_bt_num}
			
			from board
	 </insert>
	 <insert id="insertFile">
	 	insert into file(file_name, file_originName, file_location, file_size) values(#{file.file_name}, #{file.file_originName},#{file.file_location},#{file.file_size})
	 </insert>
	 <select id="selectBoardFileNum" resultType="kr.kh.project.vo.FileVO">
	 	select file_num from File where file_name = #{fn}
	 </select>
	<insert id="insertBoardFile">
		insert into boardfile (bf_bo_num, bf_fi_num, bf_type) values ( #{bn}, #{file}, #{ft})
	 </insert>
	 
<!-- 	  BoardDetail -->
	 <update id="updateBoardViews">
  		update board set bo_views = bo_views+1 where bo_num = #{bo_num}
  	 </update>
	 <select id="selectBoard"  resultType="kr.kh.project.vo.BoardVO">
  		select * from board	join boardType on bo_bt_num = bt_num where bo_num = #{bo_num}
  	 </select> 
  	 <select id="selectBftnf" resultType="map">
		select fi.*, bf.bf_type from project.boardfile bf inner join project.file fi on bf.bf_fi_num = fi.file_num where bf.bf_bo_num = #{bo}  	 
  	 </select>
<!--   	 게시판 삭제 -->
	 <delete id="deleteBoard">
  		delete from board where bo_num = #{bo_num}
  	 </delete>
	 <select id="selectFileList" resultType="map">
  		select fi.*, bf.* from boardfile bf inner join file fi on bf_fi_num = fi.file_num where bf.bf_bo_num = #{bo_num}
  	</select>
  	<select id="selectExtraFileList" resultType="map">
  		select fi.*, bf.* from boardfile bf inner join file fi on bf_fi_num = fi.file_num where bf.bf_bo_num = #{bo} AND bf.bf_type ='첨부파일'
  	</select>
  	<select id="selectImegeFileList" resultType="map">
  		select fi.*, bf.* from boardfile bf inner join file fi on bf_fi_num = fi.file_num where bf.bf_bo_num = #{bo} AND bf.bf_type ='이미지'
  	</select>
  	<delete id="deleteFile">
  		delete from file where file_num = #{fi}
  	</delete>
	 <delete id="deleteBoardFile">
	 	delete from boardfile where bf_fi_num = #{fn}
	 </delete>
	 <delete id="deleteFileList">
  		delete from file where file_num = #{fi}
  	</delete>
<!-- 추천 비추천 -->
	<select id="selectLikesByUserId" resultType="kr.kh.project.vo.LikesUserVO">

		select * from likes	where li_bo_num = #{li_bo_num} and li_me_id = #{lm}
	</select>
	<select id="selectLikesBySellerId" resultType="kr.kh.project.vo.LikesSellerVO">
		select * from likes	where li_bo_num = #{li_bo_num} and li_bi_id = #{lb}
	</select>
	<insert id="insertUserLikes">
  		insert into
  			likes(li_state, li_me_id, li_bo_num)
  			values(#{li.li_state},#{li.li_me_id},#{li.li_bo_num})
  	</insert>
	<insert id="insertSellerLikes">
  		insert into
  			likes(li_state, li_bi_id, li_bo_num)
  			values(#{li.li_state},#{li.li_bi_id},#{li.li_bo_num})
  	</insert>
	<update id="updateUserLikes">
  		update likes
  			set
  				li_state = #{li.li_state}
  			where
  				li_num = #{li.li_num}
  	</update>
  	<update id="updateSellerLikes">
  		update likes
  			set
  				li_state = #{li.li_state}
  			where
  				li_num = #{li.li_num}
  	</update>
  	<update id="updateBoardByLikes">
  		update board
  			set
  				bo_up = 
  					(select count(*) from likes 
  						where li_bo_num = #{bo_num} and li_state = 1),
  				bo_down = 
  					(select count(*) from likes 
  						where li_bo_num = #{bo_num} and li_state = -1)
  			where
  				bo_num = #{bo_num}
  	</update>
<!--   	수정 -->
  	<update id="updateBoard">
  		update board set bo_name = #{bo.bo_name}, bo_content = #{bo.bo_content}, bo_bt_num = #{bo.bo_bt_num}, bo_update_date = now()
  			where bo_num = #{bo.bo_num}
  	</update>
  	<select id="selectFile" resultType="kr.kh.project.vo.FileVO">
  		select fi.* from project.file fi inner join boardfile bf where file_num = #{fi} and bf.bf_fi_num = file_num;
  	</select>
 </mapper>